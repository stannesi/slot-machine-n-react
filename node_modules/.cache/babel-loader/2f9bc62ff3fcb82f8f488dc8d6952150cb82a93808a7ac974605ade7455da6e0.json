{"ast":null,"code":"var _jsxFileName = \"/Users/nappy.cat/Labs/js.ts.lab/slot-machine-n-react/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Reel from \"./components/Reel\";\nimport Controls from \"./components/Controls\";\nimport Display from \"./components/Display\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SYMBOL_COUNT = 5;\nconst App = () => {\n  _s();\n  const [balance, setBalance] = useState(1000);\n  const [betAmount, setBetAmount] = useState(50);\n  const [outcome, setOutcome] = useState(\"\");\n  const [reels, setReels] = useState([0, 0, 0]);\n  const [spinning, setSpinning] = useState(false);\n  const handleSpin = () => {\n    if (betAmount > balance) {\n      setOutcome(\"Insufficient balance.\");\n      return;\n    }\n    setBalance(balance - betAmount);\n    setSpinning(true);\n\n    // Simulate spinning\n    const newReels = reels.map(() => Math.floor(Math.random() * SYMBOL_COUNT));\n    setTimeout(() => {\n      setReels(newReels);\n      setSpinning(false);\n      calculateWin(newReels);\n    }, 1000);\n  };\n  const calculateWin = results => {\n    const isWin = results.every(value => value === results[0]);\n    if (isWin) {\n      const winnings = betAmount * 10;\n      setBalance(balance + winnings);\n      setOutcome(`You won $${winnings}!`);\n    } else {\n      setOutcome(\"No win this time.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slot-machine\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Slot Machine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reel-container\",\n      children: reels.map((symbolIndex, index) => /*#__PURE__*/_jsxDEV(Reel, {\n        symbolIndex: symbolIndex,\n        spinning: spinning\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      betAmount: betAmount,\n      setBetAmount: setBetAmount,\n      onSpin: handleSpin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      balance: balance,\n      outcome: outcome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kyKFym2+Z3Rqidf+G+9ESkEya+4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Reel","Controls","Display","jsxDEV","_jsxDEV","SYMBOL_COUNT","App","_s","balance","setBalance","betAmount","setBetAmount","outcome","setOutcome","reels","setReels","spinning","setSpinning","handleSpin","newReels","map","Math","floor","random","setTimeout","calculateWin","results","isWin","every","value","winnings","className","children","fileName","_jsxFileName","lineNumber","columnNumber","symbolIndex","index","onSpin","_c","$RefreshReg$"],"sources":["/Users/nappy.cat/Labs/js.ts.lab/slot-machine-n-react/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport Reel from \"./components/Reel\";\nimport Controls from \"./components/Controls\";\nimport Display from \"./components/Display\";\nimport \"./styles/App.css\";\n\nconst SYMBOL_COUNT = 5;\n\nconst App: React.FC = () => {\n  const [balance, setBalance] = useState(1000);\n  const [betAmount, setBetAmount] = useState(50);\n  const [outcome, setOutcome] = useState(\"\");\n  const [reels, setReels] = useState([0, 0, 0]);\n  const [spinning, setSpinning] = useState(false);\n\n  const handleSpin = () => {\n    if (betAmount > balance) {\n      setOutcome(\"Insufficient balance.\");\n      return;\n    }\n\n    setBalance(balance - betAmount);\n    setSpinning(true);\n\n    // Simulate spinning\n    const newReels = reels.map(() => Math.floor(Math.random() * SYMBOL_COUNT));\n    setTimeout(() => {\n      setReels(newReels);\n      setSpinning(false);\n      calculateWin(newReels);\n    }, 1000);\n  };\n\n  const calculateWin = (results: number[]) => {\n    const isWin = results.every((value) => value === results[0]);\n    if (isWin) {\n      const winnings = betAmount * 10;\n      setBalance(balance + winnings);\n      setOutcome(`You won $${winnings}!`);\n    } else {\n      setOutcome(\"No win this time.\");\n    }\n  };\n\n  return (\n    <div className=\"slot-machine\">\n      <h2>Slot Machine</h2>\n      <div className=\"reel-container\">\n        {reels.map((symbolIndex, index) => (\n          <Reel key={index} symbolIndex={symbolIndex} spinning={spinning} />\n        ))}\n      </div>\n      <Controls betAmount={betAmount} setBetAmount={setBetAmount} onSpin={handleSpin} />\n      <Display balance={balance} outcome={outcome} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}